"""change column name

Revision ID: d073b5ef7af3
Revises: 0dc9d06904ab
Create Date: 2025-03-16 06:47:50.744410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd073b5ef7af3'
down_revision: Union[str, None] = '0dc9d06904ab'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('post_comment_id', sa.Integer(), nullable=False))
    op.add_column('comments', sa.Column('user_comment_id', sa.Integer(), nullable=False))
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.drop_constraint('comments_post_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'posts', ['post_comment_id'], ['post_id_table'])
    op.create_foreign_key(None, 'comments', 'users', ['user_comment_id'], ['id'])
    op.drop_column('comments', 'post_id')
    op.drop_column('comments', 'user_id')
    op.add_column('likes', sa.Column('post_like_id', sa.Integer(), nullable=False))
    op.add_column('likes', sa.Column('user_like_id', sa.Integer(), nullable=False))
    op.drop_constraint('uix_post_user_like', 'likes', type_='unique')
    op.create_unique_constraint('uix_post_user_like', 'likes', ['post_like_id', 'user_like_id'])
    op.drop_constraint('likes_post_id_fkey', 'likes', type_='foreignkey')
    op.drop_constraint('likes_user_id_fkey', 'likes', type_='foreignkey')
    op.create_foreign_key(None, 'likes', 'posts', ['post_like_id'], ['post_id_table'])
    op.create_foreign_key(None, 'likes', 'users', ['user_like_id'], ['id'])
    op.drop_column('likes', 'post_id')
    op.drop_column('likes', 'user_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('likes', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('likes', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.create_foreign_key('likes_user_id_fkey', 'likes', 'users', ['user_id'], ['id'])
    op.create_foreign_key('likes_post_id_fkey', 'likes', 'posts', ['post_id'], ['post_id_table'])
    op.drop_constraint('uix_post_user_like', 'likes', type_='unique')
    op.create_unique_constraint('uix_post_user_like', 'likes', ['post_id', 'user_id'])
    op.drop_column('likes', 'user_like_id')
    op.drop_column('likes', 'post_like_id')
    op.add_column('comments', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('comments', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_post_id_fkey', 'comments', 'posts', ['post_id'], ['post_id_table'])
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['id'])
    op.drop_column('comments', 'user_comment_id')
    op.drop_column('comments', 'post_comment_id')
    # ### end Alembic commands ###
